const sampleController = require('../controllers/sampleController');

router.get('/', sampleController.getPasseios);

router.get('/form/:id', (req, res) => {
    const id = req.params.id;
    const query = 'SELECT * FROM passeios WHERE id = ?';
    conexao.query(query, [id], (error, results) => {
        if (error) throw error;
        const passeio = results[0];
        res.render('passeio', { passeio });
    });
});
module.exports = router;

module.exports = {
    getPasseios: (req, res) => {
        conexao.query('SELECT * FROM passeios', (error, results) => {
            if (error) throw error;
            res.render('passeios', { passeios: results });
        });
    }
};

class Server {

    static start(app) {
        const express = require('express'); 
        const app = express(); 
        const port = 3000; 

        app.set('view engine', 'ejs'); 
        app.use(express.static('public')); 
        app.get('/', (req, res) => { res.render('index'), {passeios};}); 
        app.listen(port, () => { console.log(`Servidor rodando em http://localhost:${port}`); });
    }
}
module.exports = Server;
const express = require('express');
const path = require('path');
const app = express();

// Configuração do diretório de views
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs'); // ou outro motor de template que você esteja usando

// Middleware para servir arquivos estáticos (se necessário)
app.use(express.static(path.join(__dirname, 'public')));

// Rotas
app.get('/formCadastro', (req, res) => {
    res.render('formCadastro');
});

app.get('/menuPrincipal', (req, res) => {
    res.render('menuPrincipal');
});

// Inicia o servidor
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Servidor rodando na porta ${PORT}`);
});